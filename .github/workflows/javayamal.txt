name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: docker tag myapp:latest ${{ secrets.DOCKER_HUB_USERNAME }}/my-javapp:latest

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-javapp:latest

      - name: Create SSH key file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ssh_key
          chmod 600 ssh_key

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
           -Dsonar.organization=my-org
           -Dsonar.projectKey=my-java-app
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-javapp:latest
          sudo docker stop myapp || true
          sudo docker rm myapp || true
          sudo docker run -d --name myapp -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/my-javapp:latest
          EOF

